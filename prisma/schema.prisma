generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Page {
  id              String   @id @default(cuid())
  url             String   @unique
  title           String?
  content         String?
  rawHtml         String?
  rawPageContent  String?  // Store raw page content for model reuse
  category        String?
  scraped         Boolean  @default(false)
  scrapedAt       DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  embeddings      Embedding[]
}

model Embedding {
  id        String   @id @default(cuid())
  pageId    String
  content   String
  vector    String   // JSON string of embedding vector
  metadata  String?  // JSON string of additional metadata
  createdAt DateTime @default(now())
  
  page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  conversations Conversation[]
}

model Conversation {
  id        String   @id @default(cuid())
  userId    String
  title     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
}

model Message {
  id             String   @id @default(cuid())
  conversationId String
  role           String   // 'user' or 'assistant'
  content        String
  sources        String?  // JSON string of sources used for the response
  createdAt      DateTime @default(now())
  
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
}